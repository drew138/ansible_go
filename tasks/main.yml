---
- name: Run uname command and set a fact
  command: uname
  register: ansible_go_uname_result

- name: Set fact with uname output
  set_fact:
    ansible_go_os: "{{ ansible_go_uname_result.stdout | lower }}"

- name: get filename prefix with latest version
  set_fact:
    ansible_go_filename_prefix: \
      "{{ lookup('url', ansible_go_latest_version_url, split_lines=False) }}"
  when: ansible_go_version == "latest"

- name: get filename prefix with fixed version
  set_fact:
    ansible_go_filename_prefix: go{{ ansible_go_version }}
  when: ansible_go_version != "latest"

- name: try to get current go version installed
  command: go version
  register: result
  changed_when: false

- name: set current_version var to the current
  set_fact:
    ansible_go_current_version: "{{ result.stdout.split(' ')[2] }}"
  when: result.failed == false

- name: set current_version var to none
  set_fact:
    ansible_go_current_version: "none"
  when: result.failed == true

- include_tasks: ./macos.yml
  when: ansible_go_os == darwin

- include_tasks: ./ubuntu.yml
  when: ansible_go_os == linux
